def solution(a, b, n):
    answer = 0
    while n >= a:
        answer += (n//a)*b
        n = (n//a)*b + n%a
    return answer

# a=2, b=1, n=20
# 20//2*1 + 20%2 = 10 -> 남는 병 // 10 -> 받은병 
# 10//2*1 + 10%2 = 5-> 남는병 // 5 -> 받은병 
# 5//2*1 + 5%2 = 3 -> 남는병 // 2 -> 받은병 
# 3//2*1 + 3%2 = 2 -> 남는병 // 1 -> 받은병 
# 2//2*1 + 2%2 = 1 -> 남는병 // 1 -> 받은병 // 1>=2 종료

# n//a*b + n%a -> 남는 병
# n//a*b -> 받은 병

# a=3, b=1, n=20
# 20//3*1 + 20%3 = 8 -> 남는 병 // 6 -> 받은병 
# 8//3*1 + 8%3 = 4-> 남는병 // 2 -> 받은병 
# 4//3*1 + 4%3 = 2 -> 남는병 // 1 -> 받은병 
# 2//3*1 + 2%3 = 1 -> 남는병 // 0 -> 받은병 // 2>=3이므로 종료

# 
solution = lambda a, b, n: (n - b) // (a - b) * b

한꺼번에 계산하지 않고 a개만 팔고 b개를 받는 과정은 결국 a-b 개씩 병을 소비하는 것으로 생각, 
첫번째 진행할 때는 a개만 소비되기 때문에, b만큼 못받음(-b), 
그 조건을 먼저 계산 n-b 반복횟수는 n-b // (a-b) 여기에 받는 병수 b 곱한 것
